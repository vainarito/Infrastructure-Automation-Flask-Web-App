---
- name: Update packages
  apt:
    update_cache: yes
    force: yes
  become: yes
  
- name: Install ufw
  apt:
    name: ufw
    state: present
    force: yes
  become: yes

- name: Allow SSH in firewall
  ufw:
    rule: allow
    port: 22
    proto: tcp
  become: yes

- name: Allow HTTP in firewall
  ufw: 
    rule: allow
    port: 80
    proto: tcp
  become: yes

- name: Enable firewall
  ufw:
    state: enabled
  become: yes
  
- name: Install required packages
  apt:
    name: "{{ required_packages }}"
    state: present
    force: yes
  become: yes

- name: Install python3-docker for Ansible docker modules
  apt:
    name: python3-docker
    state: present
    force: yes
  become: yes
  when: use_docker

- name: Install nginx if not using Docker
  apt:
    name: "{{ nginx_package }}"
    state: present
    force: yes
  become: yes
  when: not use_docker

- name: Clone app repository
  git:
    repo: "{{ app_repo }}"
    dest: "{{ app_dir }}"
  become_user: devops

- name: Create venv
  command: python3 -m venv {{ venv_dir }}
  args:
    creates: "{{ venv_dir }}"
  become_user: devops

- name: Install app dependencies
  pip:
    requirements: "{{ app_dir }}/requirements.txt"
    virtualenv: "{{ venv_dir }}"
  become_user: devops

- name: Copy monitor script
  template:
    src: setup_and_monitor.sh.j2
    dest: "{{ script_dir }}/setup_and_monitor.sh"
    mode: '0755'
  become: yes

- name: Copy metrics script
  template:
    src: system_metrics.sh.j2
    dest: "{{ script_dir }}/system_metrics.sh"
    mode: '0755'
  become: yes

- name: Copy backup script
  template:
    src: backup_db.sh.j2
    dest: "{{ script_dir }}/backup_db.sh"
    mode: '0755'
  become: yes

- name: Set up cron for monitor script
  cron:
    name: "Monitor script"
    cron_file: ansible_monitor
    user: root
    job: "{{ cron_monitor }}"
  become: yes

- name: Set up cron for metrics script
  cron: 
    name: "Metrics script"
    cron_file: ansible_metrics
    user: root
    job: "{{ cron_metrics }}"
  become: yes

- name: Set up cron for backup script
  cron:
    name: "Backup database"
    cron_file: ansible_backup
    user: root
    job: "{{ cron_backup }}"
  become: yes

- name: Create log files
  file:
    path: "{{ item }}"
    state: touch
    owner: root
    group: devops
    mode: '0664'
  loop:
    - "{{ flask_log }}"
    - "{{ metrics_log }}"
    - "{{ monitor_log }}"
  become: yes

- name: Copy logrotate config
  template:
    src: app_logs.j2
    dest: /etc/logrotate.d/app_logs
  become: yes

- name: Include systemd tasks
  include_tasks: systemd_version.yml
  when: not use_docker

- name: Include docker tasks
  include_tasks: docker_version.yml
  when: use_docker